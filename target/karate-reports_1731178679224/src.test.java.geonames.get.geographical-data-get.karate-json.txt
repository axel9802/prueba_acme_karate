{"failedCount":1,"prefixedPath":"src\/test\/java\/geonames\/get\/geographical-data-get.feature","packageQualifiedName":"src.test.java.geonames.get.geographical-data-get","loopIndex":-1,"relativePath":"src\/test\/java\/geonames\/get\/geographical-data-get.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":3386000,"millis":3.386,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":424800,"millis":0.4248,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"path '\/timezoneJSON'"}},{"result":{"nanos":32490300,"millis":32.4903,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"params {username: \"#(user.name)\", formatted: true, lat: #(latitude), lng: #(longitude)}"}},{"result":{"nanos":5097000,"millis":5.097,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":709100,"millis":0.7091,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":4,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":617700,"millis":0.6177,"status":"passed"},"step":{"background":true,"line":10,"prefix":"*","index":5,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":562715600,"millis":562.7156,"status":"passed"},"step":{"line":13,"prefix":"When","index":0,"text":"method GET"},"stepLog":"13:56:20.792 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-72&formatted=true&lat=4&username=karate\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:56:21.188 response time in milliseconds: 395\n1 < 200\n1 < Date: Sat, 09 Nov 2024 18:56:21 GMT\n1 < Server: Apache\/2.4.6 (CentOS) mod_jk\/1.2.46 OpenSSL\/1.0.2k-fips\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Transfer-Encoding: chunked\n1 < Content-Type: application\/json;charset=UTF-8\n{\n  \"sunrise\": \"2024-11-09 05:33\",\n  \"lng\": -72,\n  \"countryCode\": \"CO\",\n  \"gmtOffset\": -5,\n  \"rawOffset\": -5,\n  \"sunset\": \"2024-11-09 17:30\",\n  \"timezoneId\": \"America\/Bogota\",\n  \"dstOffset\": -5,\n  \"countryName\": \"Colombia\",\n  \"time\": \"2024-11-09 13:56\",\n  \"lat\": 4\n}\n\n"},{"result":{"nanos":17500,"millis":0.0175,"status":"passed"},"step":{"line":14,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":5428100,"millis":5.4281,"status":"passed"},"step":{"line":15,"prefix":"And","index":2,"text":"match response == responseSuccessful"}}],"line":19,"description":"","durationMillis":610.8861,"failed":false,"executorName":"main","name":"Get geographical data of a country","startTime":1731178580438,"refId":"[1.1:19]","endTime":1731178581197,"exampleData":{"latitude":"4","longitude":"-72"},"exampleIndex":0},{"sectionIndex":0,"stepResults":[{"result":{"nanos":209100,"millis":0.2091,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":57600,"millis":0.0576,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"path '\/timezoneJSON'"}},{"result":{"nanos":355100,"millis":0.3551,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"params {username: \"#(user.name)\", formatted: true, lat: #(latitude), lng: #(longitude)}"}},{"result":{"nanos":406900,"millis":0.4069,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":297500,"millis":0.2975,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":4,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":274200,"millis":0.2742,"status":"passed"},"step":{"background":true,"line":10,"prefix":"*","index":5,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":386496800,"millis":386.4968,"status":"passed"},"step":{"line":13,"prefix":"When","index":0,"text":"method GET"},"stepLog":"13:56:21.205 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=40&formatted=true&lat=-70&username=karate\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:56:21.590 response time in milliseconds: 385\n1 < 200\n1 < Date: Sat, 09 Nov 2024 18:56:21 GMT\n1 < Server: Apache\/2.4.6 (CentOS) mod_jk\/1.2.46 OpenSSL\/1.0.2k-fips\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Transfer-Encoding: chunked\n1 < Content-Type: application\/json;charset=UTF-8\n{\n  \"sunrise\": \"2024-11-09 01:57\",\n  \"lng\": 40,\n  \"countryCode\": \"AQ\",\n  \"gmtOffset\": 3,\n  \"rawOffset\": 3,\n  \"sunset\": \"2024-11-09 22:16\",\n  \"timezoneId\": \"Antarctica\/Syowa\",\n  \"dstOffset\": 3,\n  \"countryName\": \"Antarctica\",\n  \"time\": \"2024-11-09 21:56\",\n  \"lat\": -70\n}\n\n"},{"result":{"nanos":8300,"millis":0.0083,"status":"passed"},"step":{"line":14,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":377500,"millis":0.3775,"status":"passed"},"step":{"line":15,"prefix":"And","index":2,"text":"match response == responseSuccessful"}}],"line":20,"description":"","durationMillis":388.483,"failed":false,"executorName":"main","name":"Get geographical data of a country","startTime":1731178581201,"refId":"[1.2:20]","endTime":1731178581591,"exampleData":{"latitude":"-70","longitude":"40"},"exampleIndex":1},{"sectionIndex":0,"stepResults":[{"result":{"nanos":114100,"millis":0.1141,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":161700,"millis":0.1617,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"path '\/timezoneJSON'"}},{"result":{"nanos":378700,"millis":0.3787,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"params {username: \"#(user.name)\", formatted: true, lat: #(latitude), lng: #(longitude)}"}},{"result":{"nanos":411700,"millis":0.4117,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":281300,"millis":0.2813,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":4,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":256400,"millis":0.2564,"status":"passed"},"step":{"background":true,"line":10,"prefix":"*","index":5,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":365090100,"millis":365.0901,"status":"passed"},"step":{"line":13,"prefix":"When","index":0,"text":"method GET"},"stepLog":"13:56:21.599 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=50&formatted=true&lat=45&username=karate\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:56:21.963 response time in milliseconds: 363\n1 < 200\n1 < Date: Sat, 09 Nov 2024 18:56:21 GMT\n1 < Server: Apache\/2.4.6 (CentOS) mod_jk\/1.2.46 OpenSSL\/1.0.2k-fips\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Transfer-Encoding: chunked\n1 < Content-Type: application\/json;charset=UTF-8\n{\n  \"sunrise\": \"2024-11-09 08:29\",\n  \"lng\": 50,\n  \"countryCode\": \"KZ\",\n  \"gmtOffset\": 5,\n  \"rawOffset\": 5,\n  \"sunset\": \"2024-11-09 18:17\",\n  \"timezoneId\": \"Asia\/Aqtau\",\n  \"dstOffset\": 5,\n  \"countryName\": \"Kazakhstan\",\n  \"time\": \"2024-11-09 23:56\",\n  \"lat\": 45\n}\n\n"},{"result":{"nanos":8400,"millis":0.0084,"status":"passed"},"step":{"line":14,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":260600,"millis":0.2606,"status":"passed"},"step":{"line":15,"prefix":"And","index":2,"text":"match response == responseSuccessful"}}],"line":21,"description":"","durationMillis":366.963,"failed":false,"executorName":"main","name":"Get geographical data of a country","startTime":1731178581595,"refId":"[1.3:21]","endTime":1731178581964,"exampleData":{"latitude":"45","longitude":"50"},"exampleIndex":2},{"sectionIndex":0,"stepResults":[{"result":{"nanos":225000,"millis":0.225,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"url api.baseUrl"}},{"result":{"nanos":121500,"millis":0.1215,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"path '\/timezoneJSON'"}},{"result":{"nanos":393700,"millis":0.3937,"status":"passed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"params {username: \"#(user.name)\", formatted: true, lat: #(latitude), lng: #(longitude)}"}},{"result":{"nanos":473700,"millis":0.4737,"status":"passed"},"step":{"background":true,"line":8,"prefix":"*","index":3,"text":"def responseSuccessful = read(\"successful-response-get.json\")"}},{"result":{"nanos":314700,"millis":0.3147,"status":"passed"},"step":{"background":true,"line":9,"prefix":"*","index":4,"text":"def responseDataColombia = read(\"response-data-colombia-get.json\")"}},{"result":{"nanos":333100,"millis":0.3331,"status":"passed"},"step":{"background":true,"line":10,"prefix":"*","index":5,"text":"def responseFailedParameter = read(\"fail-parsing-parameter-get.json\")"}},{"result":{"nanos":369525300,"millis":369.5253,"status":"passed"},"step":{"line":13,"prefix":"When","index":0,"text":"method GET"},"stepLog":"13:56:21.971 request:\n1 > GET http:\/\/api.geonames.org\/timezoneJSON?lng=-50&formatted=true&lat=-45&username=karate\n1 > Host: api.geonames.org\n1 > Connection: Keep-Alive\n1 > User-Agent: Apache-HttpClient\/4.5.13 (Java\/17.0.2)\n1 > Accept-Encoding: gzip,deflate\n\n\n13:56:22.338 response time in milliseconds: 367\n1 < 200\n1 < Date: Sat, 09 Nov 2024 18:56:22 GMT\n1 < Server: Apache\/2.4.6 (CentOS) mod_jk\/1.2.46 OpenSSL\/1.0.2k-fips\n1 < Access-Control-Allow-Origin: *\n1 < X-Frame-Options: sameorigin\n1 < Cache-Control: no-cache\n1 < Keep-Alive: timeout=5, max=100\n1 < Connection: Keep-Alive\n1 < Transfer-Encoding: chunked\n1 < Content-Type: application\/json;charset=UTF-8\n{\n  \"lng\": -50,\n  \"gmtOffset\": -3,\n  \"rawOffset\": -3,\n  \"dstOffset\": 0,\n  \"lat\": -45\n}\n\n"},{"result":{"nanos":12200,"millis":0.0122,"status":"passed"},"step":{"line":14,"prefix":"Then","index":1,"text":"status 200"}},{"result":{"nanos":1199100,"errorMessage":"match failed: EQUALS\n  $ | not equal | actual does not contain key - 'countryCode' (MAP:MAP)\n  {\"lng\":-50,\"gmtOffset\":-3,\"rawOffset\":-3,\"dstOffset\":0,\"lat\":-45}\n  {\"lng\":\"#number\",\"gmtOffset\":\"#number\",\"rawOffset\":\"#number\",\"dstOffset\":\"#number\",\"lat\":\"#number\",\"sunrise\":\"##string\",\"countryCode\":\"#string\",\"sunset\":\"##string\",\"timezoneId\":\"#string\",\"countryName\":\"#string\",\"time\":\"#string\"}\n\n\nsrc\/test\/java\/geonames\/get\/geographical-data-get.feature:15","millis":1.1991,"status":"failed"},"step":{"line":15,"prefix":"And","index":2,"text":"match response == responseSuccessful"},"stepLog":"13:56:22.340 src\/test\/java\/geonames\/get\/geographical-data-get.feature:15\nAnd match response == responseSuccessful\nmatch failed: EQUALS\n  $ | not equal | actual does not contain key - 'countryCode' (MAP:MAP)\n  {\"lng\":-50,\"gmtOffset\":-3,\"rawOffset\":-3,\"dstOffset\":0,\"lat\":-45}\n  {\"lng\":\"#number\",\"gmtOffset\":\"#number\",\"rawOffset\":\"#number\",\"dstOffset\":\"#number\",\"lat\":\"#number\",\"sunrise\":\"##string\",\"countryCode\":\"#string\",\"sunset\":\"##string\",\"timezoneId\":\"#string\",\"countryName\":\"#string\",\"time\":\"#string\"}\n\n\nsrc\/test\/java\/geonames\/get\/geographical-data-get.feature:15\n"}],"line":22,"description":"","durationMillis":372.5983,"failed":true,"error":"match failed: EQUALS\n  $ | not equal | actual does not contain key - 'countryCode' (MAP:MAP)\n  {\"lng\":-50,\"gmtOffset\":-3,\"rawOffset\":-3,\"dstOffset\":0,\"lat\":-45}\n  {\"lng\":\"#number\",\"gmtOffset\":\"#number\",\"rawOffset\":\"#number\",\"dstOffset\":\"#number\",\"lat\":\"#number\",\"sunrise\":\"##string\",\"countryCode\":\"#string\",\"sunset\":\"##string\",\"timezoneId\":\"#string\",\"countryName\":\"#string\",\"time\":\"#string\"}\n\n\nsrc\/test\/java\/geonames\/get\/geographical-data-get.feature:15","executorName":"main","name":"Get geographical data of a country","startTime":1731178581967,"refId":"[1.4:22]","endTime":1731178582340,"exampleData":{"latitude":"-45","longitude":"-50"},"exampleIndex":3}],"callDepth":0,"name":"Get geographical data of a country","description":"","resultDate":"2024-11-09 01:56:22 p. m.","durationMillis":1738.9304,"passedCount":3}